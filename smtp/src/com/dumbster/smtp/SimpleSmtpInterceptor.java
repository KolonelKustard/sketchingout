/*
 * SimpleSmtpInterceptor.java
 *
 * Created on 16 June 2004, 09:58
 */

package com.dumbster.smtp;

import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  ralphjones
 */
public class SimpleSmtpInterceptor extends JFrame implements SimpleSmtpServerListener {
    
    /** Creates new form SimpleSmtpInterceptor */
    public SimpleSmtpInterceptor() {
        initComponents();
    }
    
    private void addMessage(SmtpMessage msg) {
        ((DefaultTableModel) tableMessages.getModel()).addRow(new Object[] {
            msg.getHeaderValue("From"), 
            msg.getHeaderValue("To"), 
            msg.getHeaderValue("Subject"),
            msg.getHeaderValue("Date"),
            msg
        });
    }
    
    private void messageChanged() {
        if (tableMessages.getSelectedRow() >= 0) {
            Object obj = tableMessages.getModel().getValueAt(tableMessages.getSelectedRow(), 4);
            if ((obj != null) && (obj instanceof SmtpMessage)) {
                SmtpMessage msg = (SmtpMessage) obj;
                textAreaBody.setText(msg.toString());
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jSplitPane1 = new javax.swing.JSplitPane();
        panelTop = new javax.swing.JPanel();
        panelConnect = new javax.swing.JPanel();
        labelPort = new javax.swing.JLabel();
        textFieldPort = new javax.swing.JTextField();
        buttonConnect = new javax.swing.JButton();
        scrollPaneMessages = new javax.swing.JScrollPane();
        tableMessages = new javax.swing.JTable();
        panelMessage = new javax.swing.JPanel();
        scrollPaneBody = new javax.swing.JScrollPane();
        textAreaBody = new javax.swing.JTextArea();

        setTitle("Simple SMTP Server");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        panelTop.setLayout(new java.awt.BorderLayout());

        panelTop.setPreferredSize(new java.awt.Dimension(193, 150));
        panelConnect.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        labelPort.setText("Port:");
        panelConnect.add(labelPort);

        textFieldPort.setText("25");
        textFieldPort.setMinimumSize(new java.awt.Dimension(50, 20));
        textFieldPort.setPreferredSize(new java.awt.Dimension(50, 20));
        panelConnect.add(textFieldPort);

        buttonConnect.setText("Stop Listening");
        buttonConnect.setEnabled(false);
        buttonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeState(evt);
            }
        });

        panelConnect.add(buttonConnect);

        panelTop.add(panelConnect, java.awt.BorderLayout.NORTH);

        scrollPaneMessages.setBackground(new java.awt.Color(255, 255, 255));
        scrollPaneMessages.setBorder(null);
        scrollPaneMessages.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrollPaneMessages.setVerticalScrollBarPolicy(javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scrollPaneMessages.setPreferredSize(new java.awt.Dimension(100, 100));
        scrollPaneMessages.setOpaque(false);
        tableMessages.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From", "To", "Subject", "Sent", "Msg"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMessages.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                changeMessage(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        tableMessages.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClicked(evt);
            }
        });

        scrollPaneMessages.setViewportView(tableMessages);

        panelTop.add(scrollPaneMessages, java.awt.BorderLayout.CENTER);

        jSplitPane1.setTopComponent(panelTop);

        panelMessage.setLayout(new java.awt.BorderLayout());

        scrollPaneBody.setViewportView(textAreaBody);

        panelMessage.add(scrollPaneBody, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(panelMessage);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void tableClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClicked
        System.out.println("Table Clicked");
        messageChanged();
    }//GEN-LAST:event_tableClicked

    private void changeState(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeState
        System.out.println("Changing state.");
    }//GEN-LAST:event_changeState

    private void changeMessage(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_changeMessage
        System.out.println("Changed row on table.");
    }//GEN-LAST:event_changeMessage
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        SimpleSmtpInterceptor interceptor = new SimpleSmtpInterceptor();
        interceptor.setBounds(0, 0, 800, 500);
        interceptor.show();
        
        SimpleSmtpServer server = new SimpleSmtpServer(SimpleSmtpServer.DEFAULT_SMTP_PORT);
        server.addListener(interceptor);
        
        Thread t = new Thread(server);
        t.start();
    }
    
    public void newMessage(SmtpMessage message) {
        addMessage(message);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonConnect;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel labelPort;
    private javax.swing.JPanel panelConnect;
    private javax.swing.JPanel panelMessage;
    private javax.swing.JPanel panelTop;
    private javax.swing.JScrollPane scrollPaneBody;
    private javax.swing.JScrollPane scrollPaneMessages;
    private javax.swing.JTable tableMessages;
    private javax.swing.JTextArea textAreaBody;
    private javax.swing.JTextField textFieldPort;
    // End of variables declaration//GEN-END:variables
    
}
